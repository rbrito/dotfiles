#!/usr/bin/env python

from __future__ import with_statement

import errno
import os

to_keep_private = [
    'cifs-credentials',
    'config',
    'fetchmailrc',
    'gitconfig',
    'gnupg',
    'mpoprc',
    'msmtprc',
    'mutt',
    'netrc',
    'offlineimaprc',
    'pim',
    'purple',
    'quodlibet',
    'ssh',
    ]

to_ignore = [
    '.',
    '.git',
    '.gitignore',
    'linkify',
]


def make_private(files=None):
    if files is None:
        files = os.listdir('.')
    else:
        # Use the list of files passed by the user, if it is not empty
        pass
    for filename in files:
        if os.path.isdir(filename):
            os.chmod(filename, 0700)
        else:
            os.chmod(filename, 0600)


def linkify(files=None):
    if files is None:
        files = os.listdir('.')
    else:
        # Use the list of files passed by the user, if it is not empty
        pass

    os.chdir(os.path.join(os.environ['HOME'], '.dotfiles'))
    for source in files:
        if source not in to_ignore:
            target = os.path.join('..', '.' + source)
            source = os.path.join('.dotfiles', source)
            try:
                os.unlink(target)
            except OSError, e:
                if e.errno == errno.ENOENT:
                    pass
                elif e.errno == errno.EISDIR:
                    print("%s is a directory. Ignoring." % target)
                else:
                    print errno.errorcode[e.errno]
            finally:
                os.symlink(source, target)


def add_hook():
    with open('.git/hooks/post-commit', 'w') as hook:
        hook.write('#!/bin/sh\ngit push\n')
    os.chmod('.git/hooks/post-commit', 0755)


def parse_cli():
    import optparse
    parser = optparse.OptionParser()

    parser.add_option('-H',
                      '--install-hook',
                      help='Install git hook for automatic push.',
                      action='store_true',
                      default=False)
    parser.add_option('-n',
                      '--no-linkify',
                      help='Disable creation of symlinks',
                      action='store_true',
                      default=False)
    parser.add_option('-P',
                      '--no-fix-perms',
                      help='Disable fix of permission for private files.',
                      action='store_true',
                      default=False)

    return parser.parse_args()


if __name__ == '__main__':
    opts, args = parse_cli()

    if not opts.no_linkify:
        linkify(args)
    if not opts.no_fix_perms:
        make_private(args)
    if opts.install_hook:
        add_hook()
